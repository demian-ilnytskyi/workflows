# release_build.yaml
name: Next JS Build

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      FLAVOUR:
        required: true
        type: string
        default: "production"
      runs_on:
        required: false
        type: string
        default: "ubuntu-latest"
      folder_max_mb_size:
        required: false
        type: number
        default: 3
      secrets_map:
        required: false
        type: string
        default: ""

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  build:
    runs-on: ${{inputs.runs_on}} # We are using ubuntu to deploy flutter web
    timeout-minutes: 20
    environment: ${{inputs.FLAVOUR}}
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Set Up Node.js
        uses: actions/setup-node@main
        with:
          node-version: ${{ vars.NODE_FRAMEWORK_VERSION }}
      - name: ðŸ“¦ Install Dependencies
       # npm ci instead of npm install to not overwrite package_lock.json
        run: npm install

      - name: Set env
        env:
          SECRETS_CONTEXT: ${{ toJSON(secrets) }}
        run: |
          echo "${{ inputs.secrets_map }}" | while IFS=':' read -r env_var secret_name; do
            secret_name=$(echo "$secret_name" | xargs)
            env_var=$(echo "$env_var" | xargs)

            if [[ -n "$secret_name" && -n "$env_var" ]]; then
              secret_value=$(echo "$SECRETS_CONTEXT" | jq -r --arg key "$secret_name" '.[$key]')
              
              if [[ "$secret_value" != "null" && -n "$secret_value" ]]; then
                echo "$env_var=$secret_value" >> $GITHUB_ENV
              fi
            fi
          done

          echo "NEXT_PUBLIC_FLAVOUR=${{ inputs.FLAVOUR }}" >> $GITHUB_ENV
          # Generate new build number (timestamp)
          BUILD_NUMBER=$(date +%s)

          # Append to env file
          echo "NEXT_PUBLIC_BUILD_ID=$BUILD_NUMBER" >> $GITHUB_ENV

          mkdir -p public

          BUILD_ID=$(date +%s)

          echo "{\"BUILD_ID\": \"$BUILD_ID\"}" > "public/config.json"

          # Print a message with the build number
          echo "ðŸš€ new BUILD ID - $BUILD_NUMBER"
        shell: bash
          
      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{secrets.CLOUDFLARE_API_TOKEN}}
          accountId: ${{secrets.CLOUDFLARE_ACCOUNT_ID}}
          command: deploy
          packageManager: npm
          environment: ${{ inputs.FLAVOUR != 'production' && inputs.FLAVOUR || '' }}
          preCommands: |
            npm run pre-deploy
            chmod +x ./check_app_size.sh
            ./check_app_size.sh
  notify:
    if: always() # Ensures this job runs regardless of the completion status of dependent jobs
    needs:
      - build
    uses: ./.github/workflows/notification.yml
    secrets: inherit
    with:
      job_status: ${{ needs.build.result }}
      workflow: ${{ github.workflow }}
      runs_on: ${{inputs.runs_on}}